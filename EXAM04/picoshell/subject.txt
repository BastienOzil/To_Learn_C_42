Dossier:	picoshell
Fichier:		picoshell.c
Fonctions autorisées: close, fork, wait, exit, execvp, dup2, pipe

Ecrivez la fonction suivante:

int    picoshell(char **cmds[]);

Le but de cette fonction est d'exécuter un pipeline. 
Elle doit exécuter chaque commande de cmds et connecter la sortie
de l'une à l'entrée de la suivante (comme dans un shell).

cmds contient une liste de commandes valides terminée par un pointeur nul.
Chaque ligne de cmds est un tableau argv directement utilisable 
pour un appel à execvp.

Le premier argument de chaque commande est le nom
ou le chemin de la commande, et peut être passé directement comme 
premier argument de execvp.

En cas d'erreur, la fonction doit retourner 1 (vous devez bien sûr fermer
tous les descripteurs de fichiers ouverts avant cela). Sinon, la fonction
doit attendre tous les processus enfants et retourner 0.

Vous trouverez dans ce répertoire un fichier main.c contenant de quoi
vous aider à tester votre fonction.

Examples: 
./picoshell /bin/ls "|" /usr/bin/grep picoshell
picoshell

./picoshell echo 'squalala' "|" cat "|" sed 's/a/b/g'
squblblb
