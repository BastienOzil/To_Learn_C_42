Assignment name			: tsp
Expected files			: *.c *.h
Allowed functions   : write, sqrtf, getline, fseek, fscanf, ferror, feof, fabsf, memcpy, fprintf, fclose, malloc, calloc, realloc, free, fopen, errno, stderr, stdin, stdout
-------------------------------------------------------

La première publication faisant référence à ce problème sous le nom
de "problème du voyageur de commerce" se trouve dans un rapport de 
la RAND Corporation datant de 1949, écrit par Julia Robinson, intitulé 
"On the Hamiltonian game (a traveling salesman problem)."

Voici comment elle définit le problème :

« Le but de cette note est de proposer une méthode pour résoudre un problème 
lié au problème du voyageur de commerce.
Il semble utile de donner une description du problème d’origine.
Une formulation consiste à trouver la route la plus courte pour un voyageur 
partant de Washington, visitant toutes les capitales d'État, puis revenant à Washington.

Plus généralement, il s’agit de trouver la courbe FERMÉE la plus courte
contenant n points donnés dans le plan. »

Par exemple, avec l’ensemble de villes suivant :
0, 0
1, 0
2, 0
0, 1
1, 1
2, 1
1, 2
2, 2
Peut etre représenté ainsi:
+ + +
+ + +
  + +
le chemin le plus court est:
 _____
|__   |
   |__|

Vous devez donc afficher la longueur de ce chemin, c’est-à-dire :
8.00

Écrivez un programme qui lira un ensemble de coordonnées de villes sous la forme :
'%f, %f\n' depuis l’entrée standard (stdin), et affichera la longueur du chemin 
le plus court passant par toutes ces villes, au format :'%.2f'.

Votre programme ne sera jamais testé avec plus de 11 villes.

Vous trouverez dans ce répertoire un fichier tsp.c contenant toute la partie 
ennuyeuse de l’exercice, ainsi que des fichiers d'exemple pour vous aider à tester votre programme.

Astuce : pour utiliser sqrtf, ajoutez -lm à la fin de votre commande de compilation.

Par exemple, cela doit fonctionner :
$> cat square.txt
1, 1
0, 1
1, 0
0, 0
$> ./tsp < square.txt | cat -e
4.00$